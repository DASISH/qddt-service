plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'org.asciidoctor.jvm.convert' version '2.3.0'
}
group = 'no.nsd'
version = '1.0.5'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {

//    runtime("org.springframework.boot:spring-boot-properties-migrator")

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-json")


//    compile("org.springframework.hateoas:spring-hateoas")
    compile("org.springframework.security.oauth:spring-security-oauth2:2.3.6.RELEASE")
//    compile("org.springframework.cloud:spring-cloud-security")
//    compile("org.jadira.usertype:usertype.extended")//
//    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
//    compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5")
    compile("net.logstash.logback:logstash-logback-encoder:6.2")

    compile("org.springframework.data:spring-data-envers")
    compile("org.springframework.data:spring-data-jpa")
    compile("org.springframework.data:spring-data-commons")

    compile("org.hibernate:hibernate-core")
    compile("org.hibernate:hibernate-envers")
    compile("org.hibernate.validator:hibernate-validator")

//    compile("joda-time:joda-time")
//    compile("javax.json:javax.json-api:1.1.2")
//    compile("org.glassfish:javax.json:1.1.2")
    compile("io.jsonwebtoken:jjwt:0.9.0")

    compile("org.postgresql:postgresql:42.2.1")
    compile("com.itextpdf:itext7-core:7.1.1")
    compile("com.itextpdf:html2pdf:2.0.2")


//    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
//    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0'
//    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'
//    compile group: 'javax.activation', name: 'activation', version: '1.1.1'


    testCompile(
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.security:spring-security-test",
            "org.springframework.restdocs:spring-restdocs-mockmvc:2.0.0.RELEASE",
            "com.jayway.jsonpath:json-path",
            "junit:junit",
            "com.h2database:h2")
}

asciidoctor {
    sourceDir = file('docs')
    outputDir = file('build/docs')
}

//
//remotes {
//    web01 {
//        role 'masterNode'
//        host = 'qddt-dev.nsd.no'
//        user = System.properties['user.name']
//        agent = true
////		identity = file("${System.properties['user.home']}/.ssh/puttyPrivKey.ppk")
////		knownHosts = file("${System.properties['user.home']}/.ssh/known_hosts")
//    }
//}
//
//
//
//tasks.register("deploy") {
//    doLast {
//        ssh.run {
//            session(remotes.web01) {
//                execute 'cat /etc/*-release', ignoreError: true
//                execute 'cp ../deploy/deployment/test/QDDT.jar ../deploy/deployment/test/QDDT.jar.2019.old'
//                put from: file("$buildDir/libs/QDDT.jar"), into: '../deploy/deployment/test/QDDT.jar'
//				execute 'sudo systemctl restart qddt-test'
//            }
//        }
//    }
//}
//
//deploy.onlyIf { project.hasProperty('deployTest')}