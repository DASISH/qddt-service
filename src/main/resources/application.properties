spring.profiles.active=local

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.platform=postgres

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.jpa.database=POSTGRESQL
#spring.jpa.show-sql=true
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.envers.default_schema=app_audit
#spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.data.rest.default-page-size=15


#spring.jpa.hibernate.use-new-id-generator-mappings=false

## You can uncomment this while not running unit tests if you
## don't want to pass JVM arguments at startup.
## If you dont, you need to pass -Dspring.profiles.active=development
#server.port=9000

logging.file=./log/spring.log
logging.level.org.springframework.data=ERROR
logging.level.org.springframework.security=ERROR
logging.level.org.hibernate=INFO

#spring.jpa.hibernate.ddl-auto=validate
#spring.datasource.url=jdbc:postgresql://127.0.0.16:5432/qddt
#spring.datasource.username=postgres
#spring.datasource.password=password

#Comma separated list of valid cors urls
api.origin=*
api.header=Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization

#multipart.maxFileSize=50Mb
multipart.max-request-size=50Mb


#management.context-path=/management
#endpoints.enabled=false
#endpoints.info.enabled=true
#endpoints.health.enabled=true
info.app.name=qddt-service
# JWT Auth
auth.secret=some-random-secret
auth.expires=86400
auth.header=Authorization

security.basic.enabled=false