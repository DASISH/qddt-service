spring.profiles.active=local

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://${QDDT_DB_HOST:localhost}:${QDDT_DB_PORT:5432}/${QDDT_DB_NAME:qddt-dev}
spring.datasource.username= ${QDDT_DB_USER:qddt}
spring.datasource.password= ${QDDT_DB_PASSWORD:qddt}

spring.jpa.properties.org.hibernate.envers.do_not_audit_optimistic_locking_field=false
spring.jpa.properties.org.hibernate.envers.store_data_at_delete=true
spring.jpa.properties.org.hibernate.envers.default_schema=audit
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_aud
spring.jpa.properties.org.hibernate.envers.audit_strategy=org.hibernate.envers.strategy.ValidityAuditStrategy

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

spring.web.resources.cache.period=600
spring.web.resources.chain.cache=true
spring.web.resources.chain.compressed=true

server.http2.enabled=true
server.forward-headers-strategy=framework
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/hal+json,application/hal


#logging.file=./log/spring.log
#logging.level.org.springframework.data=ERROR
#logging.level.org.springframework.security=ERROR
#logging.level.org.hibernate=ERROR

#Comma separated list of valid cors urls
endpoints.cors.allowed-headers=Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization

#api.origin=*
api.header=Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization
api.rooturl=http://localhost:5001/


info.app.name=qddt-service
# JWT Auth
auth.secret=some-random-secret
auth.expires=86400
auth.header=Authorization

